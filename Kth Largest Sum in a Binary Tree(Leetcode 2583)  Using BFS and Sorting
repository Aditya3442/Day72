/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public long kthLargestLevelSum(TreeNode root, int k) {
        Queue<TreeNode> q=new LinkedList<>();
        List<Long> list=new ArrayList<>();
        q.add(root);
        while(q.peek()!=null){
            int n=q.size();
            long sum=0;
            while(n!=0){
                if(q.peek().left!=null)
                    q.add(q.peek().left);
                if(q.peek().right!=null)
                    q.add(q.peek().right);
                sum+=q.poll().val;
                n--;
            }
            list.add(sum);
        }
        Collections.sort(list,Collections.reverseOrder());
        if(k>list.size())
            return -1;
        return list.get(k-1);
    }
}
